{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\n// create the api\n\nexport const appApi = createApi({\n  reducerPath: 'appApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost:8080'\n  }),\n  endpoints: builder => ({\n    signup: builder.mutation({\n      query: user => ({\n        url: '/users/signup',\n        method: 'POST',\n        body: user\n      })\n    }),\n    login: builder.mutation({\n      query: user => ({\n        url: '/users/login',\n        method: 'POST',\n        body: user\n      })\n    }),\n    // creating product\n    createProduct: builder.mutation({\n      query: product => ({\n        url: '/products',\n        body: product,\n        method: 'POST'\n      })\n    }),\n    deleteProduct: builder.mutation({\n      query: _ref => {\n        let {\n          product_id,\n          user_id\n        } = _ref;\n        return {\n          url: `/products/${product_id}`,\n          body: {\n            user_id\n          },\n          method: 'DELETE'\n        };\n      }\n    }),\n    updateProduct: builder.mutation({\n      query: product => ({\n        url: `/products/${product.id}`,\n        body: product,\n        method: 'PATCH'\n      })\n    }),\n    // add to cart\n    addToCart: builder.mutation({\n      query: cartInfo => ({\n        url: '/products/add-to-cart',\n        body: cartInfo,\n        method: 'POST'\n      })\n    }),\n    // remove from cart\n    removeFromCart: builder.mutation({\n      query: body => ({\n        url: '/products/remove-from-cart',\n        body,\n        method: 'POST'\n      })\n    }),\n    // increase cart\n    increaseCartProduct: builder.mutation({\n      query: body => ({\n        url: '/products/increase-cart',\n        body,\n        method: 'POST'\n      })\n    }),\n    // decrease cart\n    decreaseCartProduct: builder.mutation({\n      query: body => ({\n        url: '/products/decrease-cart',\n        body,\n        method: 'POST'\n      })\n    }),\n    // create order\n    createOrder: builder.mutation({\n      query: body => ({\n        url: '/orders',\n        method: 'POST',\n        body\n      })\n    })\n  })\n});\nexport const {\n  useSignupMutation,\n  useLoginMutation,\n  useCreateProductMutation,\n  useAddToCartMutation,\n  useRemoveFromCartMutation,\n  useIncreaseCartProductMutation,\n  useDecreaseCartProductMutation,\n  useCreateOrderMutation,\n  useDeleteProductMutation,\n  useUpdateProductMutation\n} = appApi;\nexport default appApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","appApi","reducerPath","baseQuery","baseUrl","endpoints","builder","signup","mutation","query","user","url","method","body","login","createProduct","product","deleteProduct","_ref","product_id","user_id","updateProduct","id","addToCart","cartInfo","removeFromCart","increaseCartProduct","decreaseCartProduct","createOrder","useSignupMutation","useLoginMutation","useCreateProductMutation","useAddToCartMutation","useRemoveFromCartMutation","useIncreaseCartProductMutation","useDecreaseCartProductMutation","useCreateOrderMutation","useDeleteProductMutation","useUpdateProductMutation"],"sources":["/Users/joanatria/Desktop/mp/mp-front/src/appApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\n// create the api\r\n\r\nexport const appApi = createApi({\r\n  reducerPath: 'appApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'http://localhost:8080' }),\r\n  endpoints: (builder) => ({\r\n    signup: builder.mutation({\r\n      query: (user) => ({\r\n        url: '/users/signup',\r\n        method: 'POST',\r\n        body: user,\r\n      }),\r\n    }),\r\n\r\n    login: builder.mutation({\r\n      query: (user) => ({\r\n        url: '/users/login',\r\n        method: 'POST',\r\n        body: user,\r\n      }),\r\n    }),\r\n    // creating product\r\n    createProduct: builder.mutation({\r\n      query: (product) => ({\r\n        url: '/products',\r\n        body: product,\r\n        method: 'POST',\r\n      }),\r\n    }),\r\n\r\n    deleteProduct: builder.mutation({\r\n      query: ({ product_id, user_id }) => ({\r\n        url: `/products/${product_id}`,\r\n        body: {\r\n          user_id,\r\n        },\r\n        method: 'DELETE',\r\n      }),\r\n    }),\r\n\r\n    updateProduct: builder.mutation({\r\n      query: (product) => ({\r\n        url: `/products/${product.id}`,\r\n        body: product,\r\n        method: 'PATCH',\r\n      }),\r\n    }),\r\n\r\n    // add to cart\r\n    addToCart: builder.mutation({\r\n      query: (cartInfo) => ({\r\n        url: '/products/add-to-cart',\r\n        body: cartInfo,\r\n        method: 'POST',\r\n      }),\r\n    }),\r\n    // remove from cart\r\n    removeFromCart: builder.mutation({\r\n      query: (body) => ({\r\n        url: '/products/remove-from-cart',\r\n        body,\r\n        method: 'POST',\r\n      }),\r\n    }),\r\n\r\n    // increase cart\r\n    increaseCartProduct: builder.mutation({\r\n      query: (body) => ({\r\n        url: '/products/increase-cart',\r\n        body,\r\n        method: 'POST',\r\n      }),\r\n    }),\r\n\r\n    // decrease cart\r\n    decreaseCartProduct: builder.mutation({\r\n      query: (body) => ({\r\n        url: '/products/decrease-cart',\r\n        body,\r\n        method: 'POST',\r\n      }),\r\n    }),\r\n    // create order\r\n    createOrder: builder.mutation({\r\n      query: (body) => ({\r\n        url: '/orders',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useSignupMutation,\r\n  useLoginMutation,\r\n  useCreateProductMutation,\r\n  useAddToCartMutation,\r\n  useRemoveFromCartMutation,\r\n  useIncreaseCartProductMutation,\r\n  useDecreaseCartProductMutation,\r\n  useCreateOrderMutation,\r\n  useDeleteProductMutation,\r\n  useUpdateProductMutation,\r\n} = appApi;\r\n\r\nexport default appApi;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}