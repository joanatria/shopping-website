{"ast":null,"code":"const nodemailer = require('nodemailer');\n\n// Create a transporter object using the SMTP transport\nconst transporter = nodemailer.createTransport({\n  host: 'smtp.example.com',\n  // Replace with your SMTP server host\n  port: 587,\n  // Replace with your SMTP server port\n  secure: false,\n  // Set to true if using a secure connection (e.g., SSL/TLS)\n  auth: {\n    user: 'your-email@example.com',\n    // Replace with your email address\n    pass: 'your-email-password' // Replace with your email password or an app-specific password\n  }\n});\n\n// Function to send the verification email\nconst sendVerificationEmail = async (toEmail, verificationCode) => {\n  try {\n    // Send mail with defined transport object\n    await transporter.sendMail({\n      from: 'your-email@example.com',\n      // Replace with your email address\n      to: toEmail,\n      subject: 'Account Verification',\n      text: `Your verification code: ${verificationCode}`\n    });\n    console.log('Verification email sent successfully');\n  } catch (error) {\n    console.error('Failed to send verification email:', error);\n  }\n};\nmodule.exports = {\n  sendVerificationEmail\n};","map":{"version":3,"names":["nodemailer","require","transporter","createTransport","host","port","secure","auth","user","pass","sendVerificationEmail","toEmail","verificationCode","sendMail","from","to","subject","text","console","log","error","module","exports"],"sources":["/Users/joanatria/Desktop/mp/mp-front/src/emailSender.js"],"sourcesContent":["const nodemailer = require('nodemailer');\n\n// Create a transporter object using the SMTP transport\nconst transporter = nodemailer.createTransport({\n  host: 'smtp.example.com', // Replace with your SMTP server host\n  port: 587, // Replace with your SMTP server port\n  secure: false, // Set to true if using a secure connection (e.g., SSL/TLS)\n  auth: {\n    user: 'your-email@example.com', // Replace with your email address\n    pass: 'your-email-password', // Replace with your email password or an app-specific password\n  },\n});\n\n// Function to send the verification email\nconst sendVerificationEmail = async (toEmail, verificationCode) => {\n  try {\n    // Send mail with defined transport object\n    await transporter.sendMail({\n      from: 'your-email@example.com', // Replace with your email address\n      to: toEmail,\n      subject: 'Account Verification',\n      text: `Your verification code: ${verificationCode}`,\n    });\n    console.log('Verification email sent successfully');\n  } catch (error) {\n    console.error('Failed to send verification email:', error);\n  }\n};\n\nmodule.exports = {\n  sendVerificationEmail,\n};\n"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,YAAY,CAAC;;AAExC;AACA,MAAMC,WAAW,GAAGF,UAAU,CAACG,eAAe,CAAC;EAC7CC,IAAI,EAAE,kBAAkB;EAAE;EAC1BC,IAAI,EAAE,GAAG;EAAE;EACXC,MAAM,EAAE,KAAK;EAAE;EACfC,IAAI,EAAE;IACJC,IAAI,EAAE,wBAAwB;IAAE;IAChCC,IAAI,EAAE,qBAAqB,CAAE;EAC/B;AACF,CAAC,CAAC;;AAEF;AACA,MAAMC,qBAAqB,GAAG,MAAAA,CAAOC,OAAO,EAAEC,gBAAgB,KAAK;EACjE,IAAI;IACF;IACA,MAAMV,WAAW,CAACW,QAAQ,CAAC;MACzBC,IAAI,EAAE,wBAAwB;MAAE;MAChCC,EAAE,EAAEJ,OAAO;MACXK,OAAO,EAAE,sBAAsB;MAC/BC,IAAI,EAAG,2BAA0BL,gBAAiB;IACpD,CAAC,CAAC;IACFM,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;EACrD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;EAC5D;AACF,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAG;EACfZ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}